-- UILibrary Module
local UILibrary = {}

-- Dragging function (as before)
local function makeDraggable(frame, handle)
    local dragging, dragInput, dragStart, startPos

    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    handle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

-- Create a new window with tabs on the left and content on the right
function UILibrary:CreateWindow(config)
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    -- First Frame (Left) for tabs and title
    local LeftFrame = Instance.new("Frame")
    LeftFrame.Size = UDim2.new(0, 150, 1, 0)  -- Smaller width for the left frame
    LeftFrame.Position = UDim2.new(0, 0, 0, 0)
    LeftFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    LeftFrame.Parent = ScreenGui

    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(1, 0, 0, 40)
    Title.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    Title.Text = config.Title or "NEVERWIN"
    Title.TextSize = 20
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.Parent = LeftFrame

    -- Enable dragging of the entire UI using the Title bar
    makeDraggable(LeftFrame, Title)

    -- Second Frame (Right) for the tab contents
    local RightFrame = Instance.new("Frame")
    RightFrame.Size = UDim2.new(1, -150, 1, 0)  -- Adjust width to match LeftFrame size
    RightFrame.Position = UDim2.new(0, 150, 0, 0)  -- Positioned right after LeftFrame
    RightFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    RightFrame.Parent = ScreenGui

    -- Tabs container
    local TabsContainer = Instance.new("Frame")
    TabsContainer.Size = UDim2.new(1, 0, 1, -40)  -- Occupy the space below the title in the LeftFrame
    TabsContainer.Position = UDim2.new(0, 0, 0, 40)
    TabsContainer.BackgroundTransparency = 1
    TabsContainer.Parent = LeftFrame

    local tabs = {}
    local currentContent

    function tabs:CreateTab(name)
        -- Create a button for the tab
        local TabButton = Instance.new("TextButton")
        TabButton.Size = UDim2.new(1, 0, 0, 30)
        TabButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        TabButton.Text = name
        TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.TextSize = 16
        TabButton.Parent = TabsContainer

        -- Create a content frame for the tab in the RightFrame
        local TabContent = Instance.new("Frame")
        TabContent.Size = UDim2.new(1, 0, 1, 0)
        TabContent.Visible = false
        TabContent.BackgroundTransparency = 1
        TabContent.Parent = RightFrame

        TabButton.MouseButton1Click:Connect(function()
            -- Hide previous tab content
            if currentContent then
                currentContent.Visible = false
            end

            -- Show the new tab content
            TabContent.Visible = true
            currentContent = TabContent
        end)

        -- Return the content frame for adding buttons, sliders, etc.
        local tabElements = {}

        function tabElements:CreateSwitch(name, defaultState, callback)
            local SwitchFrame = Instance.new("Frame")
            SwitchFrame.Size = UDim2.new(1, 0, 0, 30)
            SwitchFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            SwitchFrame.Parent = TabContent

            local Label = Instance.new("TextLabel")
            Label.Size = UDim2.new(0.7, 0, 1, 0)
            Label.Text = name
            Label.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label.TextSize = 14
            Label.Parent = SwitchFrame

            local Switch = Instance.new("TextButton")
            Switch.Size = UDim2.new(0.2, 0, 0.6, 0)
            Switch.Position = UDim2.new(0.75, 0, 0.2, 0)
            Switch.Text = defaultState and "On" or "Off"
            Switch.TextColor3 = defaultState and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
            Switch.Parent = SwitchFrame

            Switch.MouseButton1Click:Connect(function()
                defaultState = not defaultState
                Switch.Text = defaultState and "On" or "Off"
                Switch.TextColor3 = defaultState and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
                callback(defaultState)
            end)
        end

        function tabElements:CreateSlider(name, min, max, default, callback)
            local SliderFrame = Instance.new("Frame")
            SliderFrame.Size = UDim2.new(1, 0, 0, 30)
            SliderFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            SliderFrame.Parent = TabContent

            local Label = Instance.new("TextLabel")
            Label.Size = UDim2.new(0.5, 0, 1, 0)
            Label.Text = name
            Label.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label.TextSize = 14
            Label.Parent = SliderFrame

            local Slider = Instance.new("TextButton")
            Slider.Size = UDim2.new(0.4, 0, 0.6, 0)
            Slider.Position = UDim2.new(0.55, 0, 0.2, 0)
            Slider.Text = tostring(default)
            Slider.TextColor3 = Color3.fromRGB(0, 255, 0)
            Slider.Parent = SliderFrame

            Slider.MouseButton1Click:Connect(function()
                local value = math.random(min, max) -- Replace this with actual slider functionality
                Slider.Text = tostring(value)
                callback(value)
            end)
        end

        return tabElements
    end

    return tabs
end

return UILibrary
